# Generated by Django 5.1.2 on 2024-12-05 22:30

import cloudinary.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment_count', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('category', models.CharField(choices=[('dev_problems', 'Dev Problems and Discussions'), ('techy_nerds', 'Techy Nerds')], default='dev_problems', max_length=20)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_forum_posts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forum_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('delete_explicit_forumpost', 'Can delete forum posts containing explicit language')],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('forum_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='devsearchey.forumpost')),
            ],
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_type', models.CharField(choices=[('seeking', 'Job Seeking'), ('offering', 'Job Offering')], max_length=8)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('bookmark_count', models.PositiveIntegerField(default=0)),
                ('reference_number', models.CharField(blank=True, max_length=10, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('delete_explicit_jobpost', 'Can delete job posts containing explicit language')],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(default='no bio...')),
                ('avatar', cloudinary.models.CloudinaryField(default='https://res.cloudinary.com/dfxbvixpv/image/upload/v1731942244/j4spsms91wb541cu9bvh.png', max_length=255, verbose_name='image')),
                ('github', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('bookmarked_posts', models.ManyToManyField(blank=True, related_name='bookmarked_by_profiles', to='devsearchey.jobpost')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('delete_bad_bio', 'Can delete user bios containing bad language')],
            },
        ),
    ]
