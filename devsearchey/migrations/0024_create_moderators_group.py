# Generated by Django 5.1.2 on 2024-11-29 12:22

from django.db import migrations


def create_moderators_group(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # Create 'Moderators' group
    moderators_group, created = Group.objects.get_or_create(name='Moderators')

    if created:
        # Define permissions to assign
        permissions = [
            'delete_explicit_jobpost',
            'delete_explicit_forumpost',
            'delete_bad_bio',
        ]

        for perm_codename in permissions:
            try:
                perm = Permission.objects.get(codename=perm_codename)
                moderators_group.permissions.add(perm)
            except Permission.DoesNotExist:
                print(f"Permission '{perm_codename}' not found.")

def remove_moderators_group(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    try:
        moderators_group = Group.objects.get(name='Moderators')
        moderators_group.delete()
    except Group.DoesNotExist:
        pass

class Migration(migrations.Migration):

    dependencies = [
        ('devsearchey', '0022_remove_jobpost_bookmarked_by_alter_forumpost_user'),
        ('auth', '0012_alter_user_first_name_max_length'),  # Ensure this matches your current auth migration
    ]

    operations = [
        migrations.RunPython(create_moderators_group, remove_moderators_group),
    ]